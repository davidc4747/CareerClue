angular.module("CareerClue",["ngRoute","ngAnimate","CareerClue.DragDrop","CareerClue.Controls","CareerClue.SideBar","CareerClue.Job","CareerClue.SignIn","CareerClue.SignUp","CareerClue.Dash","CareerClue.Profile","CareerClue.MultiJob"]),angular.module("CareerClue").config(["$routeProvider",function(a){a.when("/Dash",{templateUrl:"views/Dash/dash.html",controller:"DashCtrl",loginRequired:!0}).when("/MultiJob/:statusType?/:companyName?",{templateUrl:"views/MultiJob/multijob.html",controller:"MultiJobCtrl",loginRequired:!0}).when("/Profile",{templateUrl:"views/Profile/profile.html",controller:"ProfileCtrl",loginRequired:!0}).when("/SignIn",{templateUrl:"views/SignIn/signin.html",controller:"SignInCtrl",loginRequired:!1}).when("/SignUp",{templateUrl:"views/SignUp/signup.html",controller:"SignUpCtrl",loginRequired:!1}).when("/ForgotPassword",{templateUrl:"views/ForgotPass/forgotPass.html",controller:"ForgotPassCtrl",loginRequired:!1}).when("/ForgotUsername",{templateUrl:"views/ForgotUsername/forgotUsername.html",controller:"ForgotUserCtrl",loginRequired:!1}).otherwise({redirectTo:"/SignIn"})}]),angular.module("CareerClue.Dash",["Repository"]).controller("DashCtrl",["$scope",function(a){}]),angular.module("CareerClue.MultiJob",["Repository"]).directive("search",["$routeParams",function(a){return{restrict:"E",template:'<form class="frm frm--search row" ng-submit=""><i class="add-job col-xs-1 fa fa-plus fa-2x" ng-click="createJob()"></i><div class="field col-xs-11"><input class="txt txt--search" type="search" ng-model="search"><label class="lbl lbl--search" for="">Search</label><i class="fa"ng-click="clearSearch()"'+"ng-class=\"[(!search || search == '') ? 'fa-search' : 'fa-times']\"></i></div></form>",replace:!0,link:function(b,c,d){b.clearSearch=function(){b.search="",a.companyName=""}}}}]).controller("MultiJobCtrl",["$scope","Repository","$routeParams",function(a,b,c){a.statusFilter=c.statusType,a.search=c.companyName,a.jobs=[],b.getUserJobs(function(b){a.jobs=b}),a.$on("removeJob",function(b,c){for(var d=a.jobs.length-1;d>=0;d--)a.jobs[d].JobInfo_Id===c.Id&&a.jobs.splice(d,1)}),a.$on("editJobs",function(b,c){for(var d=a.jobs.length-1;d>=0;d--)a.jobs[d].JobInfo_Id==c.Id&&(console.log(c),a.jobs[d]=c.job)}),a.createJob=function(){a.search="";var b={JobInfo_Id:-1,CompanyName:"",JobStatus_Name:a.statusFilter};(0==a.jobs.length||a.jobs[0].JobInfo_Id>0)&&a.jobs.unshift(b)}}]),angular.module("CareerClue.Profile",["Repository"]).controller("ProfileCtrl",["$scope","Repository",function(a,b){b.userInfo(function(b){b.length>0&&(a.user=b[0])}),a.updateUserInfo=function(){b.updateUserInfo(a.user,function(b){a.userInfoErrors=b})},a.updateUserPass=function(c){b.updateUserPass(a.user,function(b){a.userPassErrors=b,0==b.length&&(a.user.curPass="",a.user.newPass="",a.user.rePass="",c.$setPristine(),c.$setUntouched())})}}]),angular.module("CareerClue.SignIn",["Repository"]).controller("SignInCtrl",["$scope","$location","$rootScope","Repository",function(a,b,c,d){a.user={name:"",password:"",remember:!1},a.loading=!1,a.errors=[],c.$on("$routeChangeStart",function(a,c){"/SignIn"!=b.path()&&d.getSignInStatus(function(a){var d="undefined"!=typeof c.loginRequired?c.loginRequired:!0;1==d&&0==a&&b.path("/SignIn")})}),d.getSignInStatus(function(a){1==a&&b.path("/MultiJob")}),a.signIn=function(){a.errors=[],""==a.user.name&&a.errors.push({mess:"Username is required"}),""==a.user.password&&a.errors.push({mess:"Password is required"}),a.loading=!0,d.signIn(a.user,function(c){1==c?b.path("/MultiJob"):a.errors.push({mess:"Invalid username or password"}),a.loading=!1})}}]),angular.module("CareerClue.SignUp",["Repository"]).controller("SignUpCtrl",["$scope","Repository","$location",function(a,b,c){a.user={name:"",email:"",password:"",repass:""},a.errors=[],a.signUp=function(){a.errors=[],""==a.user.name&&a.errors.push({mess:"Username is a required field"}),""==a.user.email&&a.errors.push({mess:"Email is a required field"}),""==a.user.password&&a.errors.push({mess:"Password is a required field"}),""==a.user.repass&&a.errors.push({mess:"Confirm password is a required field"}),a.user.password!==a.user.repass&&a.errors.push({mess:"Passwords do not match"}),a.user.password.length<3&&a.errors.push({mess:"Password need to be longer"}),0==a.errors.length&&b.signUp(a.user,function(b){1==b?c.path("/MultiJob"):a.errors.push({mess:"Invalid Information"})})}}]),angular.module("CareerClue.Controls",["Repository"]).directive("controls",["$document","$location","Repository",function(a,b,c){return{restrict:"E",templateUrl:"directives/Controls/controls.html",replace:!0,link:function(d,e,f){d.showMenu=!1,d.showSettings=!1,d.toggleMenu=function(){d.showMenu=!d.showMenu},d.toggleSettings=function(){d.showSettings=!d.showSettings},d.signOut=function(){c.signOut(function(){b.path("/SignIn")})},a.on("click",function(){d.$apply(function(){d.showMenu=!1,d.showSettings=!1})})}}}]),angular.module("CareerClue.DragDrop",[]).value("transfer",{}).directive("ccDrag",["transfer",function(a){return{restrict:"A",link:function(b,c,d){b.ccDrag={},c.attr("draggable",!0),b.ccDrag.ondrag=d.ondrag,c.attr("ondrag",""),b.ccDrag.ondragstart=d.ondragstart,c.attr("ondragstart",""),b.ccDrag.ondragend=d.ondragend,c.attr("ondragend",""),c.bind("drag",function(){b.$eval(b.ccDrag.ondrag),b.$apply()}),c.bind("dragstart",function(){a.data=b.$eval(d.ccDragData),b.$eval(b.ccDrag.ondragstart),b.$apply()}),c.bind("dragend",function(){b.$eval(b.ccDrag.ondragend),a.data=null,b.$apply()})}}}]).directive("ccDrop",["transfer",function(a){return{restrict:"A",replace:!0,link:function(b,c,d){b.ccDrop={},b.ccDrop.ondrop=d.ondrop,c.attr("ondrop",""),b.ccDrop.ondragenter=d.ondragenter,c.attr("ondragenter",""),b.ccDrop.ondragexit=d.ondragexit,c.attr("ondragexit",""),b.ccDrop.ondragleave=d.ondragleave,c.attr("ondragleave",""),b.ccDrop.ondragover=d.ondragover,c.attr("ondragover",""),c.bind("drop",function(c){c.preventDefault(),b.ccDrop.transfer=a.data,b.$eval(b.ccDrop.ondrop),b.$apply()}),c.bind("dragenter",function(){b.$eval(d.onddragenter),b.$apply()}),c.bind("dragexit",function(){b.$eval(d.ondragexit),b.$apply()}),c.bind("dragleave",function(){b.$eval(d.ondragleave),b.$apply()}),c.bind("dragover",function(a){a.preventDefault(),b.$eval(d.onddragover),b.$apply()})}}}]),angular.module("CareerClue.Job",["Repository"]).directive("job",["Repository","$routeParams","nav",function(a,b,c){return{restrict:"E",replace:!0,scope:{jobData:"="},templateUrl:"directives/Job/job.html",link:function(d,e,f){d.mode="",d.ngClass=[],d.template="",d.statusTypes=[],a.getStatusTypes(function(a){d.statusTypes=a}),d.$watch("jobData.DateApplied",function(){var a=864e5,b=new Date,c=d.jobData.DateApplied||b,e=Math.round((b.getTime()-c.getTime())/a);e>=365?(d.jobData.TimePassed=Math.floor(e/365),d.jobData.TimePassedLabel=" Years ago"):e>=30?(d.jobData.TimePassed=Math.floor(e/30),d.jobData.TimePassedLabel=" Months ago"):e>0?(d.jobData.TimePassed=e,d.jobData.TimePassedLabel=" Days ago"):(d.jobData.TimePassed="Today",d.jobData.TimePassedLabel="")}),d.switchMode=function(a){switch(a){case"job--view":d.mode="job--view",d.ngClass=["job--view"],d.template="directives/Job/partials/view.html";break;case"job--view-expand":d.mode="job--view-expand",d.ngClass=["job--view-expand"],d.template="directives/Job/partials/view.html",$("html, body").animate({scrollTop:e[0].offsetTop+"px"},"slow","swing");break;case"job--edit":d.mode="job--edit",d.ngClass=["job--edit"],d.template="directives/Job/partials/edit.html",$("html, body").animate({scrollTop:e[0].offsetTop+"px"},"slow","swing")}},d.toggleExpand=function(){"job--edit"!=d.mode&&d.switchMode("job--view"==d.mode?"job--view-expand":"job--view")},d.numArray=function(a){for(var b=[],c=0;a>c;c++)b.push(c);return b},d.snap=function(a){$(a).height($(a)[0].scrollHeight)},d.editRating=0,d.starhover=function(a){d.editRating=a+1},d.resetStars=function(){d.editRating=0},d.saveStars=function(a){d.jobData.Job_Rating=a,console.log(d.jobData),d.save()},d.save=function(){a.saveJob(d.jobData,function(a){if(null!=a){if(d.jobData.JobInfo_Id=a,"job--view"==d.mode)return;d.switchMode("job--view-expand");for(var b=c.items.length-1;b>=0;b--)c.items[b].statusName==d.jobData.JobStatus_Name&&(c.items[b].jobs.push(d.jobData),c.items[b].count=parseInt(c.items[b].count)+1)}})},d.cancel=function(){d.jobData.JobInfo_Id>0?d.switchMode("job--view-expand"):d.$emit("removeJob",{Id:d.jobData.JobInfo_Id})},d["delete"]=function(){var b=confirm("Are you sure you want to delete '"+d.jobData.CompanyName+"'? \n your data can't be recoverd");b&&(a.deleteJob(d.jobData),d.$emit("removeJob",{Id:d.jobData.JobInfo_Id}))},d.jobData.JobInfo_Id<0?d.switchMode("job--edit"):b.companyName==d.jobData.CompanyName?d.switchMode("job--view-expand"):d.switchMode("job--view")}}}]),angular.module("CareerClue.SideBar",["Repository"]).factory("nav",["Repository","$routeParams","$filter",function(a,b,c){return navItems=[{Id:-1,href:"/MultiJob",text:"View All"}],a.getUserJobs(function(b){b=b,a.getjobStatusCount(function(a){for(var d=0;d<a.length;d++)navItems.push({Id:a[d].JobStatus_Id,isExpanded:!1,statusName:a[d].JobStatus_Name,href:"/MultiJob/"+a[d].JobStatus_Name,text:a[d].JobStatus_Name,count:a[d].JobStatus_Count,jobs:c("filter")(b,{JobStatus_Name:a[d].JobStatus_Name})})})}),{items:navItems}}]).directive("sideBar",["Repository","nav","$routeParams",function(a,b,c){return{restrict:"E",scope:{},replace:!0,templateUrl:"directives/SideBar/sidebar.html",link:function(c,d,e){c.date=new Date,c.navItems=b.items,a.userInfo(function(a){c.userInfo=a})}}}]).directive("navGroup",["nav","$routeParams","Repository",function(a,b,c){return{restrict:"E",replace:!0,templateUrl:"directives/SideBar/partials/navGroup.html",link:function(d,e,f){d.isActive=d.item.statusName==b.statusType,d.toggleExpand=function(){d.item.isExpanded=!d.item.isExpanded},d.changeStatus=function(b,e,f){b.JobInfo_Id>0&&b.JobStatus_Id!=e&&(b.JobStatus_Id=e,b.JobStatus_Name=f,c.saveJob(b,function(){for(var c=a.items.length-1;c>=0;c--)if(a.items[c].jobs){for(var e=a.items[c].jobs.length-1;e>=0;e--)a.items[c].jobs[e].JobInfo_Id==b.JobInfo_Id&&(a.items[c].jobs.splice(e,1),a.items[c].count=parseInt(a.items[c].count)-1);a.items[c].statusName==b.JobStatus_Name&&(a.items[c].jobs.push(b),a.items[c].count=parseInt(a.items[c].count)+1)}d.$emit("editJobs",{Id:b.JobInfo_Id,job:b})}))}}}}]);